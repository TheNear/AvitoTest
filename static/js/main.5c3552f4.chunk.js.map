{"version":3,"sources":["components/Modal/Modal.module.css","components/EventPopup/EventPopup.module.css","components/CommentForm/CommentForm.module.css","components/Comments/Comments.module.css","components/Footer/Footer.module.css","components/Header/Header.module.css","components/Thumbnail/Thumbnail.module.css","components/ThumbnailList/ThumbnailList.module.css","components/Footer/Footer.tsx","components/Header/Header.tsx","assets/js/constants.ts","assets/js/api.ts","components/EventPopup/EventPopup.tsx","assets/images/Loader.svg","components/Loader/Loader.tsx","components/CommentForm/CommentForm.tsx","assets/js/helpers.ts","components/Comments/Comments.tsx","components/Modal/Modal.tsx","components/Thumbnail/Thumbnail.tsx","components/ThumbnailList/ThumbnailList.tsx","pages/Gallery/Gallery.tsx","App.tsx","index.tsx"],"names":["module","exports","Footer","className","style","footer","copyright","Header","header","title","BASE_URL","get","url","a","fetch","response","ok","Error","statusText","json","post","body","fetchOption","method","headers","redirect","getThumbnailsData","getFullImgData","id","postComment","data","postUrl","jsonData","JSON","stringify","modalRoot","document","getElementById","EventPopup","props","componentDidMount","setTimeout","setState","show","clear","lifetime","state","this","content","popupType","createPortal","wrapper","hidden","Component","Loader","src","LoaderSVG","alt","CommentForm","name","comment","changeInputHandler","submitHandler","action","form","onSubmit","autoFocus","type","required","minLength","maxLength","value","onChange","placeholder","input","button","generateComments","timestamp","Date","now","text","date","Comments","list","map","toLocaleDateString","Modal","clearErrors","error","getImageData","prevState","message","currentTarget","evt","preventDefault","postID","newComment","comments","pressEscHandler","key","closeModalHandler","window","addEventListener","componentWillUnmount","removeEventListener","background","container","image","onClick","Thumbnail","clickHandler","ThumbnailList","thumbnails","thumbnail","Gallery","loadData","isLoading","onThumbnailClick","openedImageID","onCloseButtonClick","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5c3552f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Modal_background__2dZn8\",\"container\":\"Modal_container__1cHvm\",\"showModal\":\"Modal_showModal__3kmBs\",\"image\":\"Modal_image__1KTTg\",\"button\":\"Modal_button__Cf6Lr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EventPopup_wrapper__1pGm7\",\"show\":\"EventPopup_show__3Zw12\",\"showPopup\":\"EventPopup_showPopup__2cYv4\",\"hidden\":\"EventPopup_hidden__2igYz\",\"hidePopup\":\"EventPopup_hidePopup__1osGK\",\"error\":\"EventPopup_error__2yJMa\",\"warn\":\"EventPopup_warn__2Pjid\",\"success\":\"EventPopup_success__3T3o7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CommentForm_form__1PNSl\",\"input\":\"CommentForm_input__2arJi\",\"button\":\"CommentForm_button__3QWJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Comments_list__W5b6z\",\"wrapper\":\"Comments_wrapper__OgeV7\",\"showComment\":\"Comments_showComment__3xA6V\",\"date\":\"Comments_date__A_z6t\",\"text\":\"Comments_text__1rcuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__J_pRT\",\"copyright\":\"Footer_copyright__3JWuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1-PPi\",\"title\":\"Header_title__rv7BQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Thumbnail_button__1UWxn\",\"showThumbnail\":\"Thumbnail_showThumbnail__3NNP0\",\"image\":\"Thumbnail_image__yRRdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnails\":\"ThumbnailList_thumbnails__Ht_oH\"};","import React from \"react\";\nimport style from \"./Footer.module.css\";\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className={style.footer}>\n      <p className={style.copyright}>&copy; 2018-2019</p>\n    </footer>\n  );\n};\n\nexport { Footer };\n","import React from \"react\";\nimport style from \"./Header.module.css\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className={style.header}>\n      <h1 className={style.title}>TEST APP</h1>\n    </header>\n  );\n};\n\nexport { Header };\n","export const BASE_URL = \"https://boiling-refuge-66454.herokuapp.com/\";\nexport const POPUP_LIFETIME = 5000;\nexport const POPUP_UNMOUNT_DELAY = 600;\n","import { ICommentPost, IFullImage, IThumbnails } from \"../../types/data\";\nimport { BASE_URL } from \"./constants\";\n\nexport const get = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response.json();\n};\n\nexport const post = async (url: string, body: string): Promise<void> => {\n  const fetchOption: RequestInit = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n    body,\n  };\n  const response = await fetch(url, fetchOption);\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n};\n\nexport const getThumbnailsData = async (): Promise<IThumbnails[]> => get(`${BASE_URL}images`);\nexport const getFullImgData = async (id: number): Promise<IFullImage> => {\n  return get(`${BASE_URL}images/${id}`);\n};\n\nexport const postComment = async (id: number, data: ICommentPost): Promise<void> => {\n  const postUrl = `${BASE_URL}images/${id}/comments`;\n  const jsonData = JSON.stringify(data);\n  await post(postUrl, jsonData);\n};\n","import React, { Component, ReactNode } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { POPUP_LIFETIME, POPUP_UNMOUNT_DELAY } from \"../../assets/js/constants\";\nimport style from \"./EventPopup.module.css\";\n\nconst modalRoot = document.getElementById(\"popup\") as HTMLElement;\n\nexport type PopupType = \"error\" | \"warn\" | \"success\";\n\nexport interface EventPopupProps {\n  content: string;\n  clear: () => void;\n  lifetime?: number;\n  popupType?: PopupType;\n}\n\nexport interface EventPopupState {\n  show: boolean;\n}\n\nclass EventPopup extends Component<EventPopupProps, EventPopupState> {\n  constructor(props: EventPopupProps) {\n    super(props);\n    this.state = {\n      show: true,\n    };\n  }\n\n  componentDidMount = (): void => {\n    setTimeout(() => {\n      this.setState({ show: false });\n      setTimeout(() => {\n        this.props.clear();\n      }, POPUP_UNMOUNT_DELAY);\n    }, this.props.lifetime || POPUP_LIFETIME);\n  };\n\n  render(): ReactNode {\n    const { content, popupType } = this.props;\n    const { show } = this.state;\n\n    return createPortal(\n      <div\n        className={`${style.wrapper} ${show ? style.show : style.hidden} ${\n          popupType && style[popupType]\n        }`}>\n        {content}\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport { EventPopup };\n","export default __webpack_public_path__ + \"static/media/Loader.3aeb6136.svg\";","import React from \"react\";\nimport LoaderSVG from \"../../assets/images/Loader.svg\";\n\nconst Loader: React.FC = () => {\n  return (\n    <div>\n      <img src={LoaderSVG} alt=\"Loading SVG\" />\n    </div>\n  );\n};\n\nexport { Loader };\n","import React from \"react\";\nimport style from \"./CommentForm.module.css\";\n\nexport interface CommentFormProps {\n  name: string;\n  comment: string;\n  submitHandler: (evt: React.FormEvent<HTMLFormElement>) => void;\n  changeInputHandler: (evt: React.FormEvent<HTMLInputElement>) => void;\n}\n\nconst CommentForm: React.FC<CommentFormProps> = ({\n  name,\n  comment,\n  changeInputHandler,\n  submitHandler,\n}) => {\n  return (\n    <form action=\"push\" className={style.form} onSubmit={submitHandler}>\n      <input\n        autoFocus\n        type=\"text\"\n        name=\"name\"\n        id=\"comment-form-author\"\n        required\n        minLength={3}\n        maxLength={25}\n        value={name}\n        onChange={changeInputHandler}\n        placeholder=\"Ваше имя\"\n        className={style.input}\n      />\n      <input\n        type=\"text\"\n        name=\"comment\"\n        required\n        minLength={3}\n        maxLength={300}\n        value={comment}\n        id=\"comment-form-content\"\n        placeholder=\"Ваш комментарий\"\n        onChange={changeInputHandler}\n        className={style.input}\n      />\n      <button className={style.button} type=\"submit\">\n        Оставить комментарий\n      </button>\n    </form>\n  );\n};\n\nexport { CommentForm };\n","import { IComment, ICommentPost } from \"../../types/data\";\n\nexport const parseDate = (timestamp: number): string => {\n  const date = new Date(timestamp);\n  return date.toLocaleDateString();\n};\n\nexport const generateComments = (data: ICommentPost): IComment => {\n  const timestamp = Date.now();\n\n  return {\n    text: data.comment,\n    date: timestamp,\n    id: timestamp,\n  };\n};\n","import React from \"react\";\nimport { parseDate } from \"../../assets/js/helpers\";\nimport { IComment } from \"../../types/data\";\nimport style from \"./Comments.module.css\";\n\nexport interface CommentsProps {\n  data: IComment[];\n}\n\nconst Comments: React.FC<CommentsProps> = ({ data }) => {\n  return (\n    <div className={style.list}>\n      {data.map((comment) => (\n        <div key={comment.id} className={style.wrapper}>\n          <p className={style.date}>{parseDate(comment.date)}</p>\n          <p className={style.text}>{comment.text}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport { Comments };\n","import React, { Component, ReactNode } from \"react\";\nimport style from \"./Modal.module.css\";\nimport { ICommentPost, IFullImage } from \"../../types/data\";\nimport { CommentForm } from \"../CommentForm/CommentForm\";\nimport { Comments } from \"../Comments/Comments\";\nimport { getFullImgData, postComment } from \"../../assets/js/api\";\nimport { generateComments } from \"../../assets/js/helpers\";\nimport { EventPopup } from \"../EventPopup/EventPopup\";\n\nexport interface ModalProps {\n  id: number;\n  closeModalHandler: () => void;\n}\n\nexport interface ModalState {\n  data: IFullImage | null;\n  form: ICommentPost;\n  error: string;\n}\n\nclass Modal extends Component<ModalProps, ModalState> {\n  constructor(props: ModalProps) {\n    super(props);\n    this.state = {\n      error: \"\",\n      data: null,\n      form: {\n        name: \"\",\n        comment: \"\",\n      },\n    };\n  }\n\n  clearErrors = (): void => {\n    this.setState({ error: \"\" });\n  };\n\n  getImageData = async (): Promise<void> => {\n    try {\n      const data = await getFullImgData(this.props.id);\n      this.setState((prevState) => ({\n        ...prevState,\n        data,\n      }));\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  };\n\n  changeInputHandler = ({ currentTarget }: React.FormEvent<HTMLInputElement>): void => {\n    const { value, name } = currentTarget;\n    this.setState(\n      (prevState) =>\n        ({\n          form: {\n            ...prevState.form,\n            [name]: value,\n          } as { [T in keyof ICommentPost]: ICommentPost[T] },\n        } as ModalState)\n    );\n  };\n\n  submitHandler = async (evt: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    evt.preventDefault();\n    try {\n      const postID = this.props.id;\n      const newComment = generateComments(this.state.form);\n      await postComment(postID, this.state.form);\n      this.setState((prevState) => {\n        if (prevState.data) {\n          return {\n            ...prevState,\n            data: { ...prevState.data, comments: [...prevState.data.comments, newComment] },\n            form: { name: \"\", comment: \"\" },\n          };\n        }\n\n        return prevState;\n      });\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  };\n\n  pressEscHandler = (evt: KeyboardEvent): void => {\n    if (evt.key === \"Escape\") {\n      this.props.closeModalHandler();\n    }\n  };\n\n  componentDidMount = (): void => {\n    this.getImageData();\n    window.addEventListener(\"keydown\", this.pressEscHandler);\n  };\n\n  componentWillUnmount = (): void => {\n    window.removeEventListener(\"keydown\", this.pressEscHandler);\n  };\n\n  render(): ReactNode {\n    const { closeModalHandler } = this.props;\n    const { data, form, error } = this.state;\n    const { name, comment } = form;\n\n    return (\n      <div className={style.background}>\n        {error && <EventPopup content={error} clear={this.clearErrors} popupType=\"error\" />}\n        {data ? (\n          <div className={style.container}>\n            <img className={style.image} src={data.url} alt=\"fullsize\" />\n            <Comments data={data.comments} />\n            <CommentForm\n              name={name}\n              comment={comment}\n              submitHandler={this.submitHandler}\n              changeInputHandler={this.changeInputHandler}\n            />\n            <button onClick={closeModalHandler} type=\"button\" className={style.button}>\n              Закрыть окно\n            </button>\n          </div>\n        ) : (\n          <div className={style.container}>Loading...</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport { Modal };\n","import React, { MouseEvent } from \"react\";\nimport { IThumbnails } from \"../../types/data\";\nimport style from \"./Thumbnail.module.css\";\n\ninterface ThumbnailProps {\n  data: IThumbnails;\n  clickHandler: (id: number) => void;\n}\n\nconst Thumbnail: React.FC<ThumbnailProps> = ({ data, clickHandler }) => {\n  const onButtonClick = (evt: MouseEvent<HTMLButtonElement>) => {\n    evt.preventDefault();\n    clickHandler(data.id);\n  };\n\n  return (\n    <button onClick={onButtonClick} key={data.id} type=\"button\" className={style.button}>\n      <img className={style.image} src={data.url} alt=\"thumbnail\" />\n    </button>\n  );\n};\n\nexport { Thumbnail };\n","import React from \"react\";\nimport { IThumbnails } from \"../../types/data\";\nimport { Thumbnail } from \"../Thumbnail/Thumbnail\";\nimport style from \"./ThumbnailList.module.css\";\n\ninterface ThumbnailListProps {\n  data: IThumbnails[];\n  clickHandler: (id: number) => void;\n}\n\nconst ThumbnailList: React.FC<ThumbnailListProps> = ({ data, clickHandler }) => {\n  return (\n    <main className={style.thumbnails}>\n      {data.map((thumbnail: IThumbnails) => (\n        <Thumbnail key={thumbnail.id} data={thumbnail} clickHandler={clickHandler} />\n      ))}\n    </main>\n  );\n};\n\nexport { ThumbnailList };\n","import React, { Component, ReactNode } from \"react\";\nimport { getThumbnailsData } from \"../../assets/js/api\";\nimport { EventPopup } from \"../../components/EventPopup/EventPopup\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport { Modal } from \"../../components/Modal/Modal\";\nimport { ThumbnailList } from \"../../components/ThumbnailList/ThumbnailList\";\nimport { IThumbnails } from \"../../types/data\";\n\nexport interface GalleryState {\n  data: IThumbnails[];\n  openedImageID: number | null;\n  isLoading: boolean;\n  error: string;\n}\n\nclass Gallery extends Component<unknown, GalleryState> {\n  constructor(props: unknown) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      data: [],\n      openedImageID: null,\n      error: \"\",\n    };\n  }\n\n  clearErrors = (): void => {\n    this.setState({ error: \"\" });\n  };\n\n  loadData = async (): Promise<void> => {\n    try {\n      await this.setState({ isLoading: true });\n      const data = await getThumbnailsData();\n      this.setState({ data });\n    } catch (error) {\n      this.setState({ error: error.message });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  componentDidMount = (): void => {\n    this.loadData();\n  };\n\n  onThumbnailClick = (id: number): void => {\n    this.setState({ openedImageID: id });\n  };\n\n  onCloseButtonClick = (): void => {\n    this.setState({\n      openedImageID: null,\n    });\n  };\n\n  render(): ReactNode {\n    const { openedImageID, data, isLoading, error } = this.state;\n\n    return (\n      <>\n        {error && <EventPopup content={error} clear={this.clearErrors} popupType=\"error\" />}\n        {!isLoading ? (\n          <ThumbnailList data={data} clickHandler={this.onThumbnailClick} />\n        ) : (\n          <Loader />\n        )}\n        {openedImageID && <Modal id={openedImageID} closeModalHandler={this.onCloseButtonClick} />}\n      </>\n    );\n  }\n}\n\nexport { Gallery };\n","import React from \"react\";\nimport \"./App.css\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport { Header } from \"./components/Header/Header\";\nimport { Gallery } from \"./pages/Gallery/Gallery\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <Gallery />\n      <Footer />\n    </>\n  );\n};\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}